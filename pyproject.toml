[project]
name = "workflow-graph"
version = "0.1.0"
description = ""
authors = [
    {name = "Evan Schalton",email = "Evan.Schalton@Gmail.com"}
]
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "pydantic-ai (>=0.1.1,<0.2.0)",
    "ollama (>=0.4.8,<0.5.0)",
    "fastapi (>=0.115.12,<0.116.0)",
    "sqlmodel (>=0.0.24,<0.0.25)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "uvicorn (>=0.34.2,<0.35.0)",
    "invoke (>=2.2.0,<3.0.0)",
    "pytest-asyncio (>=0.26.0,<0.27.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
mypy = "^1.15.0"
ruff = "^0.11.13"
types-python-dateutil = "^2.9.0.20250516"
coverage = {extras = ["toml"], version = "^7.8.2"}
pytest-cov = "^6.1.1"

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
# Exclude notebook files from mypy checking
exclude = [
    ".*\\.ipynb$"
]

[tool.ruff]
# Exclude notebook files from ruff checking
exclude = [
    "*.ipynb"
]

[tool.coverage.run]
source = ["api"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/.venv/*",
    "*/venv/*",
    "test_*.py",
    "*_test.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
ignore_errors = true
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

